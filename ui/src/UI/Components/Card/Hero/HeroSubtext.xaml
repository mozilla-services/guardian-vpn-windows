<UserControl x:Class="FirefoxPrivateNetwork.UI.Components.HeroSubText"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FirefoxPrivateNetwork.UI.Components"
             xmlns:extension="clr-namespace:FirefoxPrivateNetwork.UI"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel Orientation="Horizontal">
        <Image Name="UnstableImage" Source="{svgc:SvgImage Source={StaticResource 'unstable'}}" Width="14" Height="14" Margin="0,0,6,0">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <!-- Connection unsable -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStability)}" Value="1">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <!-- Disconnecting or Connecting -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="2">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="3">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <!-- Server switching... -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=DataContext.IsServerSwitching}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <Image Name="NoSignalImage" Source="{svgc:SvgImage Source={StaticResource 'no-signal'}}" Width="14" Height="14" Margin="0,0,6,0">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <!-- No Signal -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStability)}" Value="2">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        
                        <!-- Disconnecting or Connecting -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="2">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="3">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <!-- Server switching... -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=DataContext.IsServerSwitching}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource 'Body 10'}" TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <!-- Connection unstable -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStability)}" Value="1">
                            <Setter Property="Text" Value="{Binding Path=[hero-subtext-unstable]}"/>
                            <Setter Property="Foreground" Value="{StaticResource 'Yellow/Yellow 50'}"/>
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <!-- No signal -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStability)}" Value="2">
                            <Setter Property="Text" Value="{Binding Path=[hero-subtext-no-signal]}"/>
                            <Setter Property="Foreground" Value="{StaticResource 'Red/Red 50'}"/>
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <!-- Disconnecting or Connecting -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="2">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="3">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <!-- Server switching... -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=DataContext.IsServerSwitching}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource 'Body 10'}" TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="0">
                            <Setter Property="Text" Value="{Binding Path=[hero-subtext-turn-on]}"/>
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/Grey 40'}"/>
                        </DataTrigger>
                    
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="1">
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/White 80'}"/>
                            <Setter Property="Text">
                                <Setter.Value>
                                    <MultiBinding StringFormat="{}{0}  •  {1}">
                                        <Binding Path="[hero-subtext-secure-protected]" />
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}" Path="DataContext.ConnectionTime" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Connection unsable -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStability)}" Value="1">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <MultiBinding StringFormat="{}  •  {0}">
                                        <Binding Path="[hero-subtext-check-connection]" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/White 80'}"/>
                        </DataTrigger>

                        <!-- No signal -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStability)}" Value="2">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <MultiBinding StringFormat="{}  •  {0}">
                                        <Binding Path="[hero-subtext-check-connection]" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/White 80'}"/>
                        </DataTrigger>

                        <!-- Connecting... -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="2">
                            <Setter Property="Text" Value="{Binding Path=[hero-subtext-protected-shortly]}"/>
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/White 80'}"/>
                        </DataTrigger>

                        <!-- Disconnecting... -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=(extension:CardExtensions.VpnStatus)}" Value="3">
                            <Setter Property="Text" Value="{Binding Path=[hero-subtext-disconnected-shortly]}"/>
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/Grey 40'}"/>
                        </DataTrigger>

                        <!-- Server switching... -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}, Path=DataContext.IsServerSwitching}" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource 'Grey/White 80'}"/>
                            <Setter Property="Text">
                                <Setter.Value>
                                    <MultiBinding StringFormat="{}{0} {1} {2} {3}">
                                        <Binding Path="[hero-subtext-server-switch-from]" />
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}" Path="DataContext.SwitchingServerFrom" />
                                        <Binding Path="[hero-subtext-server-switch-to]" />
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:HeroSubText}}" Path="DataContext.SwitchingServerTo" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </StackPanel>
</UserControl>
