<UserControl x:Class="FirefoxPrivateNetwork.UI.ConnectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FirefoxPrivateNetwork.UI"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:uc="clr-namespace:FirefoxPrivateNetwork.UI.Components"
             mc:Ignorable="d" 
             VerticalContentAlignment="Top"
             d:DesignHeight="454" d:DesignWidth="360" Width="360" MaxWidth="360">

    <UserControl.Resources>
        <local:EqualityConverter x:Key="EqualityConverter"/>
        
        <!-- Toggle button template within the expander  -->
        <ControlTemplate x:Key="ExpanderToggleTemplate" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Rectangle Width="auto" Fill="Transparent"/>
                <Image x:Name="ExpanderToggleOpened" Source="{svgc:SvgImage Source={StaticResource 'drop-open'}}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="8" Height="8" Margin="15"/>
                <Image x:Name="ExpanderToggleClosed" Source="{svgc:SvgImage Source={StaticResource 'drop-closed'}}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="10" Height="8" Margin="15"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="false">
                    <Setter Property="Visibility" Value="Visible" TargetName="ExpanderToggleClosed"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="ExpanderToggleOpened"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" Value="Visible" TargetName="ExpanderToggleOpened"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="ExpanderToggleClosed"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <!-- Expander style for a server country -->
        <Style x:Key="ServerCountryExpander" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid Margin="8,5,8,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="*" x:Name="ContentRow"/>
                            </Grid.RowDefinitions>
                            <!-- Expander toggle -->
                            <Border x:Name="ToggleContainer" Grid.Row="0" CornerRadius="4">
                                <Grid>
                                    <ContentPresenter RecognizesAccessKey="True" ContentSource="Header" Margin="40,0,0,0" />
                                    <ToggleButton AutomationProperties.Name="{Binding Country}" Template="{DynamicResource ExpanderToggleTemplate}" Background="{TemplateBinding Background}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" FocusVisualStyle="{x:Null}" OverridesDefaultStyle="True"/>
                                </Grid>

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                                <Setter Property="Background" Value="{StaticResource 'Grey/Grey 10'}" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Background" Value="{StaticResource 'Grey/Grey 10'}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!-- Expand site -->
                            <Border x:Name="ExpandSite" Grid.Row="1" Visibility="Collapsed">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="false" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid Width="360" Height="Auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Navigation header bar -->
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="0" Grid.Column="0">
            <Border BorderThickness="0 0 0 1" BorderBrush="{StaticResource 'Grey/Grey 10'}" Height="57">
                <DockPanel VerticalAlignment="Center" Width="360">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <!-- Navigate back button -->
                        <Button AutomationProperties.Name="{Binding Path=[navigation-back]}" Style="{StaticResource 'Icon'}" Width="40" Height="40" Margin="8,0,8,0" VerticalAlignment="Center" local:ButtonExtensions.IconUri="{StaticResource 'back'}" Click="NavigateMain"/>
                        
                        <!-- Header bar text -->
                        <TextBlock VerticalAlignment="Center" Margin="0,17,0,16">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource 'Header 20'}" TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="0">
                                            <Setter Property="Text" Value="{Binding Path=[connection-page-title]}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Status}" Value="1">
                                            <Setter Property="Text" Value="{Binding Path=[connection-page-title]}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Status}" Value="2">
                                            <Setter Property="Text" Value="{Binding Path=[connection-connecting]}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Status}" Value="3">
                                            <Setter Property="Text" Value="{Binding Path=[connection-disconnecting]}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsServerSwitching}" Value="true">
                                            <Setter Property="Text" Value="{Binding Path=[connection-switching]}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </DockPanel>
            </Border>
        </Grid>

        <!-- Country servers list -->
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1" Grid.Column="0">
            <ScrollViewer Width="360" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <ListView x:Name="CountryServerList"  VerticalAlignment="Top" ItemsSource="{Binding CountryServerList, UpdateSourceTrigger=Explicit}" Focusable="False" KeyboardNavigation.TabNavigation="Continue">
                    <ListView.Template>
                        <ControlTemplate>
                            <ItemsPresenter />
                        </ControlTemplate>
                    </ListView.Template>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="MinHeight" Value="50"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <!-- Expander for country -->
                            <Expander HorizontalAlignment="Stretch" VerticalAlignment="Top" Focusable="False">
                                <Expander.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding CountryFlag}" VerticalAlignment="Center" Width="20" Height="15" Margin="10,0,10,0"/>
                                        <TextBlock Style="{StaticResource 'Header 20'}" FontWeight="SemiBold" VerticalAlignment="Center" Margin="10,0,10,0" TextTrimming="CharacterEllipsis" Text="{Binding Country}" />
                                    </StackPanel>
                                </Expander.Header>

                                <Expander.Style>
                                    <Style BasedOn="{StaticResource ServerCountryExpander}" TargetType="{x:Type Expander}">
                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                        <Binding Path="Country" Mode="OneTime" />
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:ConnectionView}}" Path="DataContext.ServerCityListSelectedItem.Country" UpdateSourceTrigger="PropertyChanged" Mode="OneTime" />
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="IsExpanded" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Expander.Style>

                                <!-- Expander content  -->
                                <!-- Cities servers list -->
                                <ListView x:Name="CityServerList" ItemsSource="{Binding Servers, UpdateSourceTrigger=Explicit}" Focusable="False" KeyboardNavigation.TabNavigation="Continue">
                                    <ListView.Template>
                                        <ControlTemplate>
                                            <ItemsPresenter />
                                        </ControlTemplate>
                                    </ListView.Template>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <ContentPresenter />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="IsSelected" Value="True"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <!-- City server radio button -->
                                            <RadioButton Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Margin="50,13,0,13" GroupName="SelectedServer" Content="{Binding City}" Click="RadioButton_Click">
                                                <RadioButton.Style>
                                                    <Style BasedOn="{StaticResource Radio}" TargetType="{x:Type RadioButton}">
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                                        <Binding Path="City" Mode="OneWay" />
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:ConnectionView}}" Path="DataContext.ServerSelected.City" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="IsChecked" Value="True" />
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ConnectionView}}, Path=DataContext.IsConnectionTransitioning}" Value="True">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </RadioButton.Style>
                                            </RadioButton>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                
                            </Expander>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>

        </Grid>
    </Grid>
</UserControl>
